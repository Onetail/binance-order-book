<html>
	<head>
	<style>
        body {
            font-family: Arial, sans-serif;
        }

        .container {
            display: flex;
            justify-content: space-between;
            margin: 20px;
        }

        table {
            border-collapse: collapse;
            width: 45%;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: center;
        }

        th {
            background-color: #f2f2f2;
        }

        .buy {
            background-color: #e0ffe0;
        }

        .sell {
            background-color: #ffe0e0;
        }

        caption {
            font-size: 1.2em;
            margin-bottom: 10px;
        }
    </style>
	</head>
	<body>
	<h1>
		{{ .title }}
	</h1>
	<div class="container">
	<table>
            <caption>買入價格</caption>
            <thead>
                <tr>
                    <th>數量</th>
                    <th>價格</th>
                </tr>
            </thead>
            <tbody id="bidsList">
				{{ range .bids }}
                <tr class="buy">
                    <td>{{index . 1}}</td>
                    <td>{{index . 0}}</td>
                </tr>
				{{ end }}
            </tbody>
        </table>
		<table>
			<caption>賣出價格</caption>
            <thead>
                <tr>
                    <th>價格</th>
					<th>數量</th>
                </tr>
            </thead>
            <tbody id="asksList">
				{{ range .asks }}
                <tr class="sell">
                    <td>{{index . 0}}</td>
                    <td>{{index . 1}}</td>
                </tr>
				{{ end }}
            </tbody>
		
		</table> 
	</div>
	<div>
		{{ range .bookStickerData }}
		{{ end }}
	</div>

	<script>
            // 创建 WebSocket 连接
            var ws = new WebSocket("/ws/v1/binance/depth?symbol=ethbtc");

            // 处理 WebSocket 打开事件
            ws.onopen = function() {
                console.log("WebSocket connection opened.");
            };

            // 处理 WebSocket 消息事件
            ws.onmessage = function(event) {
                // 解析接收到的数据
                var data = JSON.parse(event.data);
                updateBids(data.bids);
                updateAsks(data.asks);
            };

            // 处理 WebSocket 关闭事件
            ws.onclose = function() {
                console.log("WebSocket connection closed.");
            };

            // 更新 bids 列表
            function updateBids(bids) {
                var bidsList = document.getElementById("bidsList");
                bidsList.innerHTML = "";  // 清空当前列表

                // 循环添加新的 bids 数据
                bids.forEach(function(bid) {
                    var row = document.createElement("tr");
                    row.classList.add("buy");
                    
                    var quantityCell = document.createElement("td");
                    quantityCell.textContent = bid[1];
                    row.appendChild(quantityCell);

                    var priceCell = document.createElement("td");
                    priceCell.textContent = bid[0];
                    row.appendChild(priceCell);

                    bidsList.appendChild(row);
                });
            }

            // 更新 asks 列表
            function updateAsks(asks) {
                var asksList = document.getElementById("asksList");
                asksList.innerHTML = "";  // 清空当前列表

                // 循环添加新的 asks 数据
                asks.forEach(function(ask) {
                    var row = document.createElement("tr");
                    row.classList.add("sell");
                    
                    var priceCell = document.createElement("td");
                    priceCell.textContent = ask[0];
                    row.appendChild(priceCell);

                    var quantityCell = document.createElement("td");
                    quantityCell.textContent = ask[1];
                    row.appendChild(quantityCell);

                    asksList.appendChild(row);
                });
            }
        </script>
	</body>
</html>